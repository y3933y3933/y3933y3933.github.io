{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-compound-pattern-index-mdx-7859b6e4204a94f02699.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/compound-pattern/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    pre: \"pre\",\n    img: \"img\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"什麼是 Compound Pattern?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Compound Pattern\"), \" 是一種 React 的元件設計模式。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Compound\"), \"指的是組合，意思是由兩個或以上的元件所組合而成的元件，且會有一個主要的元件(通常是\", React.createElement(_components.strong, null, \"parent component\"), \")，其它元件如果不在主元件內使用就無效。\"), \"\\n\", React.createElement(_components.p, null, \"常見的例子如：Select、Expand 元件\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"<Select>\\n  <Option>選項1</Option>\\n  <Option>選項2</Option>\\n<Select>\\n\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Expand 元件設計\"), \"\\n\", React.createElement(_components.p, null, \"Expand 元件是一種可展開的元件，如圖所示：\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"https://github.com/y3933y3933/blog/assets/28300286/1b17d4e4-3d7f-48e5-b8ca-ed85a6f0c201\",\n    alt: \"expand\"\n  }), \"\\n(圖片來源為\", React.createElement(_components.a, {\n    href: \"https://ui.shadcn.com/docs/components/accordion\"\n  }, \"shadcn.ui\"), \")\"), \"\\n\", React.createElement(_components.p, null, \"根據結構，我們可以將其簡單地切分為 3 個元件：\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"元件\"), React.createElement(_components.th, null, \"說明\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Expand\"), React.createElement(_components.td, null, \"Parent Component\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Header\"), React.createElement(_components.td, null, \"表頭，固定會顯示\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Body\"), React.createElement(_components.td, null, \"依照展開與否顯示的內容\")))), \"\\n\", React.createElement(_components.p, null, \"預期結果：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"<Expand>\\n  <Expand.Header> 表頭內容</Expand.Header>\\n  <Expand.Icon />\\n  <Expand.Body> Body內容</Expand.Body>\\n</Expand>\\n\")), \"\\n\", React.createElement(_components.h2, null, \"實作技巧一：使用\", React.createElement(_components.code, null, \"useContext\"), \"傳遞state\"), \"\\n\", React.createElement(_components.p, null, \"使用 Expand 元件，我們會需要一個 state 跟更新 state 的 function，用來控制 body 內容是否顯示，這裡命名為\", React.createElement(_components.code, null, \"expand\"), \"與\", React.createElement(_components.code, null, \"toggle\"), \"，因為需要傳遞給其他子元件使用，可以用\", React.createElement(_components.a, {\n    href: \"https://react.dev/reference/react/useContext\"\n  }, React.createElement(_components.code, null, \"useContext\")), \"來實作。\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"透過\", React.createElement(_components.code, null, \"createContext\"), \"建立一個context\"), \"\\n\", React.createElement(_components.li, null, \"使用\", React.createElement(_components.code, null, \"context.Provider\"), \" 傳遞state\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"import React, { createContext, useState } from \\\"react\\\";\\n\\nconst ExpandContext = createContext();\\n\\nconst Expand = ({ children }) => {\\n  const [expanded, setExpanded] = useState(false);\\n  const toggle = setExpanded((prevExpanded) => !prevExpanded);\\n  const value = { expanded, toggle };\\n  return (\\n    <ExpandContext.Provider value={value}>{children}</ExpandContext.Provider>\\n  );\\n};\\n\\nconst Header = ({ children }) => {\\n  const { toggle } = useContext(ExpandContext);\\n  return <div onClick={toggle}>{children}</div>;\\n};\\n\\nconst Body = ({ children }) => {\\n  const { expanded } = useContext(ExpandContext);\\n  return expanded ? children : null;\\n};\\n\\nExpand.Header = Header;\\nExpand.Body = Body;\\n\\nexport default Expand;\\n\\n\")), \"\\n\", React.createElement(_components.h2, null, \"實作技巧二：使用\", React.createElement(_components.code, null, \"useCallback\"), \"＆\", React.createElement(_components.code, null, \"useMemo\"), \"避免重複渲染問題\"), \"\\n\", React.createElement(_components.p, null, \"上述程式碼執行後，會出現以下錯誤：\\n\", React.createElement(_components.img, {\n    src: \"https://github.com/y3933y3933/notes/assets/28300286/5b435b2a-7966-487f-95b3-63db34c3cfb5\",\n    alt: \"error\"\n  })), \"\\n\", React.createElement(_components.p, null, \"原因是我們所傳遞的\", React.createElement(_components.code, null, \"value\"), \"跟\", React.createElement(_components.code, null, \"toggle\"), \"型別是\", React.createElement(_components.code, null, \"object\"), \"跟\", React.createElement(_components.code, null, \"function\"), \"，React re-render時會認為其refernece不同，導致子元件也會不停的被re-render。\"), \"\\n\", React.createElement(_components.p, null, \"解決辦法為：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"toggle加上\", React.createElement(_components.code, null, \"uesCallback\"), \"，dependencies設為空陣列，確保初始化後toggle就不會再被改變\"), \"\\n\", React.createElement(_components.li, null, \"value加上\", React.createElement(_components.code, null, \"uesMemo\"), \"，dependencies帶入\", React.createElement(_components.code, null, \"expanded\"), \"及\", React.createElement(_components.code, null, \"toggle\"), \"，當相依值有改變，\", React.createElement(_components.code, null, \"value\"), \"才會跟著變。\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"const toggle = useCallback(() => {\\n    setExpanded((prevExpanded) => !prevExpanded);\\n  }, []);\\nconst value = useMemo(() => ({ expanded, toggle }), [expanded, toggle]);\\n\")), \"\\n\", React.createElement(_components.h2, null, \"實用技巧三：透過\", React.createElement(_components.code, null, \"useRef\"), \"解決\", React.createElement(_components.code, null, \"useEffect\"), \"第一次mount時就會觸發\"), \"\\n\", React.createElement(_components.p, null, \"元件基本功能已完成，但我們還想加上一個\", React.createElement(_components.code, null, \"onExpand\"), \"參數，當\", React.createElement(_components.code, null, \"expand\"), \"狀態改變時，可以傳入處理的事件。\\n我們改寫一下Expand，加上\", React.createElement(_components.code, null, \"onExpand\"), \" prop跟 \", React.createElement(_components.code, null, \"uesEffect\"), \"的處理：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    highlight: \"1,8-10\"\n  }, \"const Expand = ({ children, onExpand = () => {} }) => {\\n  const [expanded, setExpanded] = useState(false);\\n  const toggle = useCallback(() => {\\n    setExpanded((prevExpanded) => !prevExpanded);\\n  }, []);\\n  const value = useMemo(() => ({ expanded, toggle }), [expanded, toggle]);\\n\\n  useEffect(() => {\\n    onExpand(expanded);\\n  }, [expanded]);\\n  return (\\n    <ExpandContext.Provider value={value}>{children}</ExpandContext.Provider>\\n  );\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"但這裡會遇到一個問題，我們希望在元件mount時不要觸發\", React.createElement(_components.code, null, \"onExpand\"), \"，但\", React.createElement(_components.code, null, \"useEffect\"), \"預設會在mount的時候被觸發。\"), \"\\n\", React.createElement(_components.p, null, \"解決辦法為透過\", React.createElement(_components.code, null, \"useRef\"), \"加入一個flag判斷，\", React.createElement(_components.code, null, \"useRef\"), \"是可以讓元件記住某些資訊，可以re-render時該值不會被改變，我們可以用它來紀錄是否為mount的時機點：\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    highlight: \"8,11-14\"\n  }, \"const Expand = ({ children, onExpand = () => {} }) => {\\n  const [expanded, setExpanded] = useState(false);\\n  const toggle = useCallback(() => {\\n    setExpanded((prevExpanded) => !prevExpanded);\\n  }, []);\\n  const value = useMemo(() => ({ expanded, toggle }), [expanded, toggle]);\\n\\n  const isMounted = useRef(true);\\n\\n  useEffect(() => {\\n    if (!isMounted.current) {\\n      onExpand(expanded);\\n    }\\n    isMounted.current = false;\\n  }, [expanded]);\\n  return (\\n    <ExpandContext.Provider value={value}>{children}</ExpandContext.Provider>\\n  );\\n};\\n\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Summary\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Compound Pattern\"), \" 是一種元件設計模式，是指由一個主元件跟其他元件組合而成的元件。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Compound Pattern\"), \" 常搭配\", React.createElement(_components.code, null, \"useContext\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"參考資料\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.patterns.dev/react/compound-pattern\"\n  }, \"pattern.dev\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/linqiaoan/projects/blog/content/posts/compound-pattern/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","code","strong","pre","img","table","thead","tr","th","tbody","td","ol","li","ul","_provideComponents","components","className","alt","highlight","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}